{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Delete/Delete.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/App.js","index.js"],"names":["ContactForm","name","number","setInput","createContact","onSubmit","e","preventDefault","onChange","className","type","value","pattern","title","required","onClick","Filter","Delete","deleteContact","ContactItem","ContactList","filterContacts","map","el","id","App","state","contacts","filter","target","setState","newContact","nanoid","prevState","findIndex","alert","filterCallback","toLowerCase","includes","contact","filtered","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fcad4bba.chunk.js","sourcesContent":["const ContactForm = ({ name, number, setInput, createContact }) => {\r\n  return (\r\n    <>\r\n      <h2>Name</h2>\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n        }}\r\n      >\r\n        <input\r\n          onChange={setInput}\r\n          className=\"\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n        />\r\n        <h2>Number</h2>\r\n\r\n        <input\r\n          onChange={setInput}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n        />\r\n      </form>\r\n      <button className=\"\" onClick={createContact}>\r\n        Add contact\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","const Filter = ({ setInput }) => {\r\n  return (\r\n    <>\r\n      <span>Find contacts by name</span>\r\n      <input onChange={setInput} type=\"teltext\" name=\"filter\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","const Delete = ({ deleteContact, name }) => {\r\n  return <button onClick={deleteContact(name)}>Delete</button>;\r\n};\r\n\r\nexport default Delete;\r\n","import Delete from \"../Delete/Delete\";\r\n\r\nconst ContactItem = ({ name, number, deleteContact }) => {\r\n  return (\r\n    <li>\r\n      <span>\r\n        {name}:{number}\r\n      </span>\r\n      <Delete deleteContact={deleteContact} name={name} />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactItem;\r\n","import ContactItem from \"./../ContactItem/ContactItem\";\r\n\r\nconst ContactList = ({ filterContacts, deleteContact }) => {\r\n  return (\r\n    <>\r\n      <ul>\r\n        {filterContacts().map((el) => (\r\n          <ContactItem\r\n            key={el.id}\r\n            name={el.name}\r\n            number={el.number}\r\n            deleteContact={deleteContact}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import { Component } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    name: \"\",\r\n    number: \"\",\r\n    filter: \"\",\r\n  };\r\n\r\n  setInput = ({ target }) => {\r\n    this.setState({ [target.name]: target.value });\r\n  };\r\n\r\n  createContact = (e) => {\r\n    e.preventDefault();\r\n    const newContact = {\r\n      name: this.state.name,\r\n      id: nanoid(),\r\n      number: this.state.number,\r\n    };\r\n    this.setState((prevState) => {\r\n      if (\r\n        prevState.contacts.findIndex((el) => el.name === newContact.name) === -1\r\n      ) {\r\n        return {\r\n          contacts: [...prevState.contacts, newContact],\r\n          name: \"\",\r\n          number: \"\",\r\n        };\r\n      }\r\n      return alert(`${newContact.name} is already in contacts.`);\r\n    });\r\n  };\r\n\r\n  filterContacts = () => {\r\n    return this.state.contacts.filter(this.filterCallback);\r\n  };\r\n\r\n  filterCallback = (el) => {\r\n    return el.name.toLowerCase().includes(this.state.filter);\r\n  };\r\n\r\n  deleteContact = (contact) => {\r\n    return () => {\r\n      this.setState((prevState) => {\r\n        const filtered = prevState.contacts.filter((el) => el.name !== contact);\r\n        return { contacts: [...filtered] };\r\n      });\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2>Phonebook</h2>\r\n        <ContactForm\r\n          name={this.state.name}\r\n          number={this.state.number}\r\n          setInput={this.setInput}\r\n          createContact={this.createContact}\r\n        />\r\n        <h2>Contacts</h2>\r\n        <Filter setInput={this.setInput} />\r\n        <ContactList\r\n          filterContacts={this.filterContacts}\r\n          deleteContact={this.deleteContact}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <>\n      <App></App>\n    </>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}